#!/bin/bash

# This is the main entry point.

# set -x
set -e
set -u
set -o pipefail

# root check
[ "$(whoami)" != "root" ] && echo "You must be root or use the sudo command!" && exit 1

source $(dirname "$0")/version
#source $(dirname "$0")/build.sh
source $(dirname "$0")/chroot.sh

# defaults
FULLBUILD=NO
UPDATE_TUI=NO
UPDATE_CONFIG=N0
ENTER_CHROOT=NO

function about() {
  echo""  
  echo "┌──────────────────────────────────────────┐"
  echo "│ Arch Live on USB - Image Creator         │"
  echo "│ ---------------------------------------- │"
  echo "│ Author:   S. Reddy                       │"
  echo "│ Version:  ${VERSION}                            │"
  echo "│ ---------------------------------------- │"
  echo "│ Purpose:  Swiss Army Knife with tui for  │"
  echo "│           arch install, backup & tools   │"
  echo "└──────────────────────────────────────────┘"
  echo""
}

function options() {
    echo "┌──────────────────────────────────────────┐"
    echo "Usage: $(basename $0) <options>"
    echo ""
    echo "Options:"
    echo "  --full </dev/sdX>"
    echo "      Install full image with tui."
    echo ""
    echo "  --update-tui </dev/sdX>"
    echo "      Update only tui menu."
    echo ""
    echo "  --update-config </dev/sdX>"
    echo "      Update only config."
    echo ""
    echo "  --enter-chroot </dev/sdX>"
    echo "      Starts a chroot environment after image creation."
    echo ""
    echo "  -h|--help :"
    echo "      This help dialog."
    echo "└──────────────────────────────────────────┘"
    echo ""
}


# save cli arguments in array
POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        --target)
            TARGET="$2"
            shift
            shift
            ;;
       --full)
            FULLBUILD="YES"
            shift
            ;;
        --update-tui)
            UPDATE_TUI="YES"
            shift
            ;;
        --update-config)
            UPDATE_CONFIG="YES"
            shift
            ;;
        --enter-chroot)
            ENTER_CHROOT="YES"
            shift
            ;;
        -h|--help)
            about
            options
            exit 0
            shift
            ;;
        *)    # unknown option
            POSITIONAL+=("$1") # save it in an array for later
            echo "Unknown argument: ${POSITIONAL}"
            options
            exit 1
            shift
            ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters



# ===============================================
# MAIN
# ===============================================
if [ ! -z "${TARGET}" ]; then
    if [ $FULLBUILD == "YES" ]; then
        echo "not implemented yet! ==> should call /bin/bash build.sh -target /dev/sdX"
    fi

    if [ $UPDATE_TUI == "YES" ]; then
        mounting $TARGET && cp -rv tui /mnt/usb/root/tui
    fi

    if [ $UPDATE_CONFIG == "YES" ];     then
        mounting $TARGET && echo "img_updatecfg --target /dev/sdb"
    fi

    if [ $ENTER_CHROOT == "YES" ]; then
        mounting $TARGET && enter_chroot
    fi
else
        echo
        echo "==> You must specify a target!"
        echo
        options
fi







